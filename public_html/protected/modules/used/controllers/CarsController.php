<?php

class CarsController extends UsedController
{
    public $layout = '//layouts/main';

    public function filters()
    {
        return array(
            'accessControl', // perform access control for CRUD operations
            'postOnly + delete', // we only allow deletion via POST request
        );
    }

    public function accessRules()
    {
        return array(
            array('allow', // allow admin user to perform 'admin' and 'delete' actions
                'actions'=>array('index', 'brand', 'mod', 'modification', 'item', 'searchItems', 'node', 'unit'),
                'users'=>array('*'),
            ),
            array('deny',  // deny all users
                'users'=>array('*'),
            ),
        );
    }

    public function init()
    {
        Yii::app()->clientScript->registerCssFile(Yii::app()->baseUrl . '/css/front.used.css');
        parent::init(); // TODO: Change the autogenerated stub
    }

    /**
     * Страница всех марок автомобилей
     */
    public function actionIndex()
    {
        $model = new CActiveDataProvider('UsedBrands', array(
            'criteria'=> array(
                'order'=>'name',
            ),
        ));
        
        $this->render('index',array(
            'model'=>$model,
        ));
    }

    /**
     * Страница моделей авто
     * @param $brand
     */
    public function actionBrand($brand)
    {
        $model = UsedBrands::model()->findByAttributes(array('slug'=>$brand));
        $criteria = new CDbCriteria();
        $criteria->compare('brand_id', $model->id);
        
        $dataProvider = new CActiveDataProvider('UsedModels', array(
            'criteria'=>$criteria,
        ));

        $this->render('brand',array(
            'dataProvider'=>$dataProvider,
            'model'=>$model
        ));
    }

    /**
     * Страница модификаций
     * @param $brand
     * @param $model
     */
    public function actionMod($brand, $model)
    {
        $mod = UsedModels::model()->findByAttributes(array('slug'=>$model));
        $criteria = new CDbCriteria();
        $criteria->compare('model_id', $mod->id);

        $dataProvider = new CActiveDataProvider('UsedMod', array(
            'criteria'=>$criteria,
        ));

        $this->render('mod',array(
            'dataProvider'=>$dataProvider,
            'mod'=>$mod
        ));
    }

    /**
     * Страница деталей для данной модификации
     * @param $brand
     * @param $model
     * @param $modification
     *
     */
    public function actionModification($brand, $model, $modification)
    {
        $mod = UsedMod::model()->findByAttributes(array('slug'=>$modification));

        //$criteria = new CDbCriteria();
        //$criteria->compare('t.mod_id', $mod->id);
        //$criteria->with = 'usedItemsUsages';

        //$issetIems = UsedItems::model()->count($criteria);
        //$issetIems = $mod->usedItemsUsages;
        //echo CVarDumper::dump($issetIems,10,true);

        /**
         * Получить все записи применяемости к этой модификации
         */
        //$usages = UsedItemsUsage::model()->findAllByAttributes(array('mod_id'=>$mod->id));
        //$usegeIn = CHtml::listData($usages, 'item_id', 'item_id');
        /**
         * Создать строку для IN (1,2,3)
         */
        //$usegeIn = implode(',', $usegeIn);

        /**
         * Сформировать запрос для count
         */
        //$sqlCount = "select count(*) from (SELECT * FROM used_items WHERE mod_id={$mod->id} union all SELECT * FROM used_items WHERE id in ('{$usegeIn}')) tmp";
        $sqlCount = "SELECT COUNT(*) FROM used_items WHERE mod_id={$mod->id} OR id in (select item_id from used_items_usage where mod_id={$mod->id})";
        /**
         * Сформировать запрос для выборки
         */
        //$sql = "SELECT * FROM used_items WHERE mod_id={$mod->id} union SELECT * FROM used_items WHERE id in ('{$usegeIn}')";
        $sql = "SELECT * FROM used_items WHERE mod_id={$mod->id} OR id in (select item_id from used_items_usage where mod_id={$mod->id})";
        
        /**
         * Получить общее количество записей
         */
        $count = Yii::app()->db->createCommand($sqlCount)->queryScalar();

        /**
         * Получить все записи подходящие по условию
         * ВАЖНО! Возвращается массив данных, а не массив объектов
         */
        $allItems = new CSqlDataProvider($sql, array(
            'totalItemCount'=>$count,
            'pagination'=>array(
                'pageSize'=>10,
            ),
        ));

        //$sql = "SELECT * FROM used_items WHERE mod_id={$mod->id} OR id in (select item_id from used_items_usage where mod_id={$mod->id})";
        //$tmp = Yii::app()->db->createCommand($sql)->queryAll();
        //$tmp = UsedItems::model()->findAllBySql($sql);

        $this->render('modification',array(
            'dataProvider'=>$allItems,
            'model'=>$mod,
            //'tmp'=>$tmp
        ));
    }

    /**
     * Открыть деталь по алиасу
     * @param $slug
     */
    public function actionItem($slug)
    {
        $item = UsedItems::model()->findByAttributes(array('slug'=>$slug));
        $this->render('item',array(
            'model'=>$item
        ));
    }

    /**
     * Получить детали для узла модификации
     * @param $id идентификатор узла
     * @param $mod идентификатор модификации
     * @throws CException
     */
    public function actionNode($id, $mod)
    {
        //echo CVarDumper::dump($mod,10,true);exit;
        /**
         * Получить объект модификации по id
         */
        $mod = UsedMod::model()->findByPk($mod);

        /**
         * Получить все записи применяемости других деталей к этой модификации
         */
        //$usages = UsedItemsUsage::model()->findAllByAttributes(array('mod_id'=>$mod->id));
        //$usegeIn = CHtml::listData($usages, 'item_id', 'item_id');

        /**
         * Создать строку для IN (1,2,3)
         */
        //$usegeIn = implode(',', $usegeIn);

        /**
         * Сформировать запрос для count
         */
        //$sqlCount = "select count(*) from (SELECT * FROM used_items WHERE mod_id={$mod->id} and node_id={$id} union all SELECT * FROM used_items WHERE id in ('{$usegeIn}')) tmp";
        /**
         * Сформировать запрос для выборки деталей
         */
        //$sql = "SELECT * FROM used_items WHERE mod_id={$mod->id} and node_id={$id} union SELECT * FROM used_items WHERE id in ('{$usegeIn}')";

        /**
         * Получить общее количество записей
         */
        //$count = Yii::app()->db->createCommand($sqlCount)->queryScalar();





        /**
         * Сформировать запрос для count
         */
        //$sqlCount = "select count(*) from (SELECT * FROM used_items WHERE mod_id={$mod->id} union all SELECT * FROM used_items WHERE id in ('{$usegeIn}')) tmp";
        $sqlCount = "SELECT COUNT(*) FROM used_items WHERE (mod_id={$mod->id} OR id in (select item_id from used_items_usage where mod_id={$mod->id})) and node_id={$id}";
        /**
         * Сформировать запрос для выборки
         */
        //$sql = "SELECT * FROM used_items WHERE mod_id={$mod->id} union SELECT * FROM used_items WHERE id in ('{$usegeIn}')";
        $sql = "SELECT * FROM used_items WHERE (mod_id={$mod->id} OR id in (select item_id from used_items_usage where mod_id={$mod->id})) and node_id={$id}";

        /**
         * Получить общее количество записей
         */
        $count = Yii::app()->db->createCommand($sqlCount)->queryScalar();

        /**
         * Получить все записи подходящие по условию
         * ВАЖНО! Возвращается массив данных, а не массив объектов
         */
        $allItems = new CSqlDataProvider($sql, array(
            'totalItemCount'=>$count,
            'pagination'=>array(
                'pageSize'=>10,
            ),
        ));

        $this->renderPartial('node',array(
            'dataProvider'=>$allItems,
            'model'=>$mod
        ),false,true);
    }

    /**
     * Получить детали для агрегата модификации
     * @param $id
     * @param $mod
     * @throws CException
     */
    public function actionUnit($id, $mod)
    {
        /**
         * Получили модификацию по id
         */
        $mod = UsedMod::model()->findByPk($mod);

        /**
         * Получить все записи применяемости к этой модификации
         */
        //$usages = UsedItemsUsage::model()->findAllByAttributes(array('mod_id'=>$mod->id));
        //$usegeIn = CHtml::listData($usages, 'item_id', 'item_id');
        /**
         * Создать строку для IN (1,2,3)
         */
        //$usegeIn = implode(',', $usegeIn);

        /**
         * Сформировать запрос для count
         */
        //$sqlCount = "select count(*) from (SELECT * FROM used_items WHERE mod_id={$mod->id} and unit_id={$id} union all SELECT * FROM used_items WHERE id in ('{$usegeIn}')) tmp";
        /**
         * Сформировать запрос для выборки
         */
        //$sql = "SELECT * FROM used_items WHERE mod_id={$mod->id} and unit_id={$id} union SELECT * FROM used_items WHERE id in ('{$usegeIn}')";

        /**
         * Получить общее количество записей
         */
        //$count = Yii::app()->db->createCommand($sqlCount)->queryScalar();




        /**
         * Сформировать запрос для count
         */
        //$sqlCount = "select count(*) from (SELECT * FROM used_items WHERE mod_id={$mod->id} union all SELECT * FROM used_items WHERE id in ('{$usegeIn}')) tmp";
        $sqlCount = "SELECT COUNT(*) FROM used_items WHERE (mod_id={$mod->id} OR id in (select item_id from used_items_usage where mod_id={$mod->id})) and unit_id={$id}";
        /**
         * Сформировать запрос для выборки
         */
        //$sql = "SELECT * FROM used_items WHERE mod_id={$mod->id} union SELECT * FROM used_items WHERE id in ('{$usegeIn}')";
        $sql = "SELECT * FROM used_items WHERE (mod_id={$mod->id} OR id in (select item_id from used_items_usage where mod_id={$mod->id})) and unit_id={$id}";

        /**
         * Получить общее количество записей
         */
        $count = Yii::app()->db->createCommand($sqlCount)->queryScalar();

        /**
         * Получить все записи подходящие по условию
         * ВАЖНО! Возвращается массив данных, а не массив объектов
         */
        $allItems = new CSqlDataProvider($sql, array(
            'totalItemCount'=>$count,
            'pagination'=>array(
                'pageSize'=>10,
            ),
        ));

        $this->renderPartial('unit',array(
            'dataProvider'=>$allItems,
            'model'=>$mod
        ),false,true);
    }

    /**
     * @todo Если понадобится заменить vendor_code на original_num
     * @throws CException
     */
    public function actionSearchItems()
    {
        $result = array();

        $query = $_POST['q'];
        $modification_id = intval($_POST['mid']);

        $models = UsedItems::model()->findAll(
            'name LIKE :match OR vendor_code LIKE :match AND mod_id=:id',
            array(':match' => "%$query%", ':id'=>$modification_id)
        );

        //echo CVarDumper::dump($models,10,true);exit;

        $result['status']['result'] = true;
        $result['status']['message'] = '';

        foreach ($models as $model) {
            $result['grops'][] = $this->renderPartial('_view_search', array('model'=>$model), true, false);//$model->attributes;

        }

        echo json_encode($result);
    }
}